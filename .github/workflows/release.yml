on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Release

jobs:
  create-release:
    name: create release
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Copy release URL into file
        run: |
          mkdir release
          printf "%s" "${{ steps.create_release.outputs.upload_url }}" > release/url.txt
      - name: Stash file containing the release URL as an artifact
        uses: actions/upload-artifact@v1
        with:
          name: release-url
          path: ./release
 
  linux-build:
    name: Linux Build
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2
      - name: Pull a GRAALVM JDK
        run: wget https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-19.3.1/graalvm-ce-java11-linux-amd64-19.3.1.tar.gz
      - name: Setup Java JDK
        uses: actions/setup-java@v1.3.0
        with:
          java-version: 13
          java-package: jdk
          # Path to where the compressed JDK is located. The path could be in your source repository or a local path on the agent.
          jdkFile: graalvm-ce-java11-linux-amd64-19.3.1.tar.gz
      - name: echo JAVA_HOME
        run: echo $JAVA_HOME
      - name: install native-image
        run: /opt/hostedtoolcache/jdk/13.0.0/x64/bin/gu install native-image
      - name: Build with Maven
        run: mvn clean package -DskipTests -Pnative

      - name: ls target
        run: ls target

      - name: Retrieve stashed release URL
        uses: actions/download-artifact@v1
        with:
          name: release-url
      - name: Read release URL
        id: get_release_url
        run: echo ::set-output name=URL::$(cat release-url/url.txt)

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_url.outputs.URL }}
          asset_path: target/lunar-lander-1.0.0-SNAPSHOT-runner
          asset_name: lunar-lander-1.0.0-SNAPSHOT-runner-linux
          asset_content_type: text/html

  osx-build:
    name: Darwin Build
    runs-on: macos-latest
    steps:

      - uses: actions/checkout@v2
      - name: Pull a GRAALVM JDK
        run: wget https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-19.3.1/graalvm-ce-java11-darwin-amd64-19.3.1.tar.gz
      - name: Setup Java JDK
        uses: actions/setup-java@v1.3.0
        with:
          java-version: 13
          java-package: jdk
          # Path to where the compressed JDK is located. The path could be in your source repository or a local path on the agent.
          jdkFile: graalvm-ce-java11-darwin-amd64-19.3.1.tar.gz
      - name: install native-image
        run: /Users/runner/hostedtoolcache/jdk/13.0.0/x64/Contents/Home/bin/gu install native-image
      - name: Build with Maven
        env:
          JAVA_HOME: /Users/runner/hostedtoolcache/jdk/13.0.0/x64/Contents/Home
        run: mvn clean package -DskipTests -Pnative
        
      - name: ls target
        run: ls target

      - name: Retrieve stashed release URL
        uses: actions/download-artifact@v1
        with:
          name: release-url
      - name: Read release URL
        id: get_release_url
        run: echo ::set-output name=URL::$(cat release-url/url.txt)

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_url.outputs.URL }}
          asset_path: target/lunar-lander-1.0.0-SNAPSHOT-runner
          asset_name: lunar-lander-1.0.0-SNAPSHOT-runner-darwin
          asset_content_type: text/html
